(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{308:function(a,t,s){a.exports=s.p+"assets/img/vault-ui.c27472ec.png"},396:function(a,t,s){"use strict";s.r(t);var e=s(45),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"vault-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vault-configuration"}},[a._v("#")]),a._v(" Vault Configuration")]),a._v(" "),e("p",[a._v("For Vault configuration, we are going to use vault-cli and vault-ui both. Download and install vault-cli on your local system. It can be downloaded from "),e("a",{attrs:{href:"https://www.vaultproject.io/downloads",target:"_blank",rel:"noopener noreferrer"}},[a._v("here"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("p",[a._v("First, forward the port of vault to your local system.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl port-forward vault-0 "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8200")]),a._v(":8200 -n vault\n")])])]),e("p",[a._v("Login into the vault using the root token which we got using init command.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ vault login\n  Token "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("will be hidden"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(":\n")])])]),e("p",[a._v("Enable the Kubernetes auth backend in the vault cluster")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ vault auth "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" kubernetes\nSuccess"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" Enabled kubernetes auth method at: kubernetes/\n")])])]),e("p",[a._v("Create a file with name "),e("code",[a._v("vault-reviewer.yaml")]),a._v(" which will have the service-account and cluster role access information.")]),a._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ServiceAccount\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" vault"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("reviewer\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("---")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" rbac.authorization.k8s.io/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ClusterRoleBinding\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("tokenreview"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("binding\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" vault\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("roleRef")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("apiGroup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" rbac.authorization.k8s.io\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ClusterRole\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" system"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("auth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("delegator\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("subjects")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ServiceAccount\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" vault"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("reviewer\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" vault\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl apply -f vault-reviewer.yaml\n")])])]),e("p",[a._v("Configure Vault with the vault-reviewer token and Kubernetes CA to fetch secrets.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VAULT_SA_TOKEN_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("kubectl get sa vault-reviewer -n vault -o "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"{.secrets[*]['name']}\"")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("SA_JWT_TOKEN")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("kubectl get secret -n vault "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VAULT_SA_TOKEN_NAME")]),a._v('"')]),a._v(" -o "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"{.data.token}"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 --decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("SA_CA_CRT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("kubectl get secret -n vault "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VAULT_SA_TOKEN_NAME")]),a._v('"')]),a._v(" -o "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("\"{.data['ca\\.crt']}\"")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" base64 --decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ vault "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" auth/kubernetes/config "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("token_reviewer_jwt")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SA_JWT_TOKEN")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("kubernetes_host")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https://kubernetes.default "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("kubernetes_ca_cert")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SA_CA_CRT")]),a._v('"')]),a._v("\nSuccess"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" Data written to: auth/kubernetes/config\n")])])]),e("p",[a._v("Create a policy in vault for Kubernetes to read the secrets.")]),a._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[a._v("path "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"secret/*"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[a._v("capabilities")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"read"')]),a._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"list"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ vault policy "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" k8s_policy policy.hcl\n")])])]),e("p",[a._v("Create a service-account which can be associated with the application pod to fetch the secrets.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ kubectl create sa tester\n")])])]),e("p",[a._v("Associate the role to service-account.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ vault "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" auth/kubernetes/role/k8s_role "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("bound_service_account_names")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("tester "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("bound_service_account_namespaces")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("default "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("policies")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("k8s_policy "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ttl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("1h\n")])])]),e("p",[a._v("Let’s try to put some secret inside Vault.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("$ vault kv put secret/mysql "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("password\n")])])]),e("p",[e("img",{attrs:{src:s(308),alt:""}})])])}),[],!1,null,null,null);t.default=n.exports}}]);