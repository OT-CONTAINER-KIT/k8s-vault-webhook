(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{308:function(s,a,t){s.exports=t.p+"assets/img/vault-ui.c27472ec.png"},387:function(s,a,t){"use strict";t.r(a);var e=t(45),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"hashicorp-vault"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashicorp-vault"}},[s._v("#")]),s._v(" Hashicorp Vault")]),s._v(" "),e("p",[s._v("For integrating Hashicorp Vault with the K8s Vault Webhook, first we need to setup Hashicorp Vault inside or outside the Kubernetes cluster.")]),s._v(" "),e("p",[s._v("Here we will talk about the integration of Vault inside Kubernetes.")]),s._v(" "),e("h2",{attrs:{id:"consul-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#consul-setup"}},[s._v("#")]),s._v(" Consul Setup")]),s._v(" "),e("p",[s._v("But before setting up Vault, we have to setup a key-value store for it. We are going to use "),e("a",{attrs:{href:"https://consul.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Hashicorp Consul"),e("OutboundLink")],1),s._v(" for our datastore.")]),s._v(" "),e("p",[s._v("Add the HashiCorp Helm Repository:")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" hashicorp https://helm.releases.hashicorp.com\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hashicorp"')]),s._v(" has been added to your repositories\n")])])]),e("p",[s._v("Ensure you have access to the consul chart:")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ helm search repo hashicorp/consul\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nNAME                CHART VERSION   APP VERSION DESCRIPTION\nhashicorp/consul    "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.20")]),s._v(".1          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.7")]),s._v(".2       Official HashiCorp Consul Chart\n")])])]),e("p",[s._v("Now you’re ready to install Consul! To install Consul with the default configuration using Helm 3 run:")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ helm "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" consul hashicorp/consul "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --set global.name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("consul --namespace vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nLAST DEPLOYED: Mon May  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(":57:16 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("\nNAMESPACE: vault\nSTATUS: deployed\nREVISION: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nNOTES:\nThank you "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" installing HashiCorp Consul"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nNow that you have deployed Consul, you should "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("look")]),s._v(" over the docs on using \nConsul with Kubernetes available here: \n\nhttps://www.consul.io/docs/platform/k8s/index.html\n\n\nYour release is named consul.\n\nTo learn "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" about the release, run:\n\n  $ helm status consul\n  $ helm get all consul\n")])])]),e("p",[s._v("Let’s verify the consul pods.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl get pods -n vault -l "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("release")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("consul\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nNAME              READY   STATUS    RESTARTS   AGE\nconsul-server-2   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          50s\nconsul-server-0   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          50s\nconsul-server-1   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          50s\nconsul-5crwc      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          51s\nconsul-k4hn5      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          51s\nconsul-jldb8      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          51s\n")])])]),e("h2",{attrs:{id:"vault-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vault-setup"}},[s._v("#")]),s._v(" Vault Setup")]),s._v(" "),e("p",[s._v("Once the consul cluster is ready, let’s try to install vault cluster with HA mode. Also we will change the datastore of vault to consul.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),e("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ./override-values.yaml")]),s._v('\nserver:\n  ha:\n    enabled: true\n    replicas: 3\n    config: |\n      ui = true\n\n      listener "tcp" {\n          tls_disable = 1\n          address = "[::]:8200"\n          cluster_address = "[::]:8201"\n      }\n\n      storage "consul" {\n          path = "vault"\n          address = "consul-server:8500"\n      }\nEOF')]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ helm "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" vault -f override-values.yaml "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    hashicorp/vault --namespace vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nNAME: vault\nLAST DEPLOYED: Mon May  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":00:37 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("\nNAMESPACE: vault\nSTATUS: deployed\nREVISION: "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nTEST SUITE: None\nNOTES:\nThank you "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" installing HashiCorp Vault"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nNow that you have deployed Vault, you should "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("look")]),s._v(" over the docs on using\nVault with Kubernetes available here:\n\nhttps://www.vaultproject.io/docs/\n\n\nYour release is named vault. To learn "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" about the release, try:\n\n  $ helm status vault\n  $ helm get manifest vault\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl get pods -n vault -l app.kubernetes.io/instance"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nNAME                                    READY   STATUS    RESTARTS   AGE\nvault-agent-injector-77fbb4d4f8-mwngm   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          30m\nvault-2                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2m24s\nvault-0                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2m24s\nvault-1                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          2m24s\n")])])]),e("p",[e("strong",[s._v("Note:- You will see your vault pods are not in Ready state because vault is still sealed. We need to unseal it before using it.")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it vault-0 -n vault -- vault operator init\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nUnseal Key "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": mK1PeGrP+A+QidoKzsYIpaAhszwaMCGd0dUMGZ1JWWoQ\nUnseal Key "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": q2bazJZReOhY2yfJmJ8puS2FLF4mpWqlE6umws4M2lwl\nUnseal Key "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(": fnpqx2xpAtI4iTU8iTA3uFM5xP/yDqnsPMsDzVTEyqPa\nUnseal Key "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(": I2D1KeIA3lIqdlodRL1AeFBmvBoy92mg8kno3QD0mKN0\nUnseal Key "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(": cNpXnigDnm/djUED5UE0nhAc3wXrfvIDKWQoVgzn5X5b\n\nInitial Root Token: s.XP91VwITtMaMhiL1JMHzFpSR\n\nVault initialized with "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" key shares and a key threshold of "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". Please securely\ndistribute the key shares printed above. When the Vault is re-sealed,\nrestarted, or stopped, you must supply at least "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" of these keys to unseal it\nbefore it can start servicing requests.\n\nVault does not store the generated master key. Without at least "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" key to\nreconstruct the master key, Vault will remain permanently sealed"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\nIt is possible to generate new unseal keys, provided you have a quorum of\nexisting unseal keys shares. See "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vault operator rekey"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information.\n")])])]),e("p",[e("strong",[s._v("Note:- Save the output at a special secure place, because this will be required to login in Vault as root user. Use first three unseal tokens to unseal the vault.")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it vault-0 -n vault "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -- vault operator unseal mK1PeGrP+A+QidoKzsYIpaAhszwaMCGd0dUMGZ1JWWoQ\n$ kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it vault-0 -n vault "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -- vault operator unseal q2bazJZReOhY2yfJmJ8puS2FLF4mpWqlE6umws4M2lwl\n$ kubectl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it vault-0 -n vault "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -- vault operator unseal fnpqx2xpAtI4iTU8iTA3uFM5xP/yDqnsPMsDzVTEyqPa\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nKey                    Value\n---                    -----\nSeal Type              shamir\nInitialized            "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nSealed                 "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\nTotal Shares           "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\nThreshold              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nVersion                "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.7")]),s._v(".0\nStorage Type           consul\nCluster Name           vault-cluster-57a810a1\nCluster ID             2ec3fced-cf4c-d59c-74ba-78d57f4bb94e\nHA Enabled             "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nHA Cluster             n/a\nHA Mode                standby\nActive Node Address    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),e("p",[e("strong",[s._v("Repeat the same unseal steps for vault-1 and vault-2 as well")])]),s._v(" "),e("p",[s._v("The pods will become ready as soon as vault is unsealed.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl get pods -n vault -l app.kubernetes.io/instance"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nNAME                                    READY   STATUS    RESTARTS   AGE\nvault-agent-injector-77fbb4d4f8-l4x45   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          18m\nvault-0                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          18m\nvault-1                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          18m\nvault-2                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          18m\n")])])]),e("h2",{attrs:{id:"vault-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vault-configuration"}},[s._v("#")]),s._v(" Vault Configuration")]),s._v(" "),e("p",[s._v("For Vault configuration, we are going to use vault-cli and vault-ui both. Download and install vault-cli on your local system. It can be downloaded from "),e("a",{attrs:{href:"https://www.vaultproject.io/downloads",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),e("OutboundLink")],1),s._v(".")]),s._v(" "),e("p",[s._v("First, forward the port of vault to your local system.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl port-forward vault-0 "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8200")]),s._v(":8200 -n vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nForwarding from "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8200 -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8200")]),s._v("\nForwarding from "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("::1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":8200 -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8200")]),s._v("\n")])])]),e("p",[s._v("Login into the vault using the root token which we got using init command.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VAULT_ADDR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://127.0.0.1:8200\n$ vault login\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nToken "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("will be hidden"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": \nSuccess"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" You are now authenticated. The token information displayed below\nis already stored "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the token helper. You "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" NOT need to run "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vault login"')]),s._v("\nagain. Future Vault requests will automatically use this token.\n\nKey                  Value\n---                  -----\ntoken                s.XP91VwITtMaMhiL1JMHzFpSR\ntoken_accessor       dK1rauoPrf0nNxMb8wRfwz1i\ntoken_duration       ∞\ntoken_renewable      "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\ntoken_policies       "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"root"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nidentity_policies    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\npolicies             "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"root"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),e("p",[s._v("Enable the Kubernetes auth backend in the vault cluster")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ vault auth "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" kubernetes\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nSuccess"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" Enabled kubernetes auth method at: kubernetes/\n")])])]),e("p",[s._v("Create a file with name "),e("code",[s._v("vault-reviewer.yaml")]),s._v(" which will have the service-account and cluster role access information.")]),s._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ServiceAccount\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" vault"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("reviewer\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" vault\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" rbac.authorization.k8s.io/v1beta1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ClusterRoleBinding\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" role"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("tokenreview"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("binding\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" vault\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("roleRef")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiGroup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" rbac.authorization.k8s.io\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ClusterRole\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" system"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("auth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("delegator\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("subjects")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ServiceAccount\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" vault"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("reviewer\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" vault\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl apply -f vault-reviewer.yaml\n")])])]),e("p",[s._v("Configure Vault with the vault-reviewer token and Kubernetes CA to fetch secrets.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VAULT_SA_TOKEN_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl get sa vault-reviewer -n vault -o "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"{.secrets[*]['name']}\"")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SA_JWT_TOKEN")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl get secret -n vault "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAULT_SA_TOKEN_NAME")]),s._v('"')]),s._v(" -o "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{.data.token}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 --decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SA_CA_CRT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("kubectl get secret -n vault "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAULT_SA_TOKEN_NAME")]),s._v('"')]),s._v(" -o "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("jsonpath")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"{.data['ca\\.crt']}\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" base64 --decode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ vault "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" auth/kubernetes/config "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("token_reviewer_jwt")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SA_JWT_TOKEN")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("kubernetes_host")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("https://kubernetes.default "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("kubernetes_ca_cert")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$SA_CA_CRT")]),s._v('"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nSuccess"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" Data written to: auth/kubernetes/config\n")])])]),e("p",[s._v("Create a policy in vault for Kubernetes to read the secrets.")]),s._v(" "),e("div",{staticClass:"language-hcl extra-class"},[e("pre",{pre:!0,attrs:{class:"language-hcl"}},[e("code",[s._v("path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"secret/*"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v("capabilities")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"list"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ vault policy "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" k8s_policy policy.hcl\n")])])]),e("p",[s._v("Create a service-account which can be associated with the application pod to fetch the secrets.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ kubectl create sa tester\n")])])]),e("p",[s._v("Associate the role to service-account.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ vault "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" auth/kubernetes/role/tester "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bound_service_account_names")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tester "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("bound_service_account_namespaces")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("default "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("policies")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("k8s_policy "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1h\n")])])]),e("p",[s._v("Let’s try to put some secret inside Vault.")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("$ vault kv put secret/mysql "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("password\n")])])]),e("p",[e("img",{attrs:{src:t(308),alt:""}})])])}),[],!1,null,null,null);a.default=n.exports}}]);